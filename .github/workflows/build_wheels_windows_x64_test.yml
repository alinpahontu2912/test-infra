name: X64 Wheels Build

on:
  workflow_call:
    inputs:
      repository_name:
        required: true
        type: string
      repository_branch:
        required: true
        type: string
      python_version:
        required: false
        default: "Python312"
        type: string
      msvc_version:
        required: false
        default: "latest"
        type: string
      pytorch_build_run_id:
        required: false
        type: string
      build_type:
        required: false
        default: "Release"
        type: string
      build_version:
        required: false
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: windows-latest
    name: Build wheel
    steps:
      - name: Set up environment variables
        id: env_vars
        run: |
          echo "DOWNLOADS_DIR=c:\\temp\\downloads\\$(basename '${{ inputs.repository_name }}')" >> $GITHUB_ENV
          echo "DEPENDENCIES_DIR=c:\\temp\\dependencies\\$(basename '${{ inputs.repository_name }}')" >> $GITHUB_ENV
          echo "SRC_DIR=src\\${{ inputs.repository_name }}" >> $GITHUB_ENV
          echo "SCRIPTS_DIR=test-infra\\.github\\scripts\\winx64test" >> $GITHUB_ENV
          echo "PYTHON_VERSION=${{ inputs.python_version }}" >> $GITHUB_ENV
          echo "MSVC_VERSION=${{ inputs.msvc_version }}" >> $GITHUB_ENV
          echo "BUILD_TYPE=${{ inputs.build_type }}" >> $GITHUB_ENV
          echo "BUILD_VERSION=${{ inputs.build_version }}" >> $GITHUB_ENV
      - name: Checkout test-infra Repository
        uses: actions/checkout@v4
        with:
          repository: alinpahontu2912/test-infra
          ref: x64windows_test
          path: test-infra
      - name: Checkout Target Repository (${{ inputs.repository_name }})
        uses: actions/checkout@v4
        with:
            repository: ${{ inputs.repository_name }}
            ref: ${{ inputs.repository_branch }}
            path: src/${{ inputs.repository_name }}  # Stores it in 'src/{repository_name}/'
            submodules: recursive
      - name: Debug Paths
        shell: bash
        run: |
          echo "SCRIPTS_DIR: $SCRIPTS_DIR"
          ls -l "$SCRIPTS_DIR" || echo "SCRIPTS_DIR does not exist"
      
          echo "Checking test-infra\\.github\\scripts\\winx64test\\ directory explicitly:"
          ls -l test-infra\\.github\\scripts\\winx64test\\ || echo "Explicit path check failed"

          echo "SRC_DIR: $SRC_DIR"
          ls -l "$SRC_DIR" || echo "SRC_DIR does not exist"

          echo "Checking src\\pytorch\\vision directory explicitly:"
          ls -l src\\pytorch\\vision || echo "Explicit path check failed"

      # - name: Run Bootstrap Git Script
      #   shell: cmd
      #   run: |
      #     echo Running bootstrap_git.bat...
      #     "%SCRIPTS_DIR%\bootstrap_git.bat"
      # - name: Bootstrap Python
      #   shell: cmd
      #   run: |
      #     echo Running bootstrap_python.bat...
      #     "%SCRIPTS_DIR%\bootstrap_python.bat"
      # - name: Bootstrap Build Tools
      #   shell: cmd
      #   run: |
      #     echo Running bootstrap_buildtools.bat...
      #     "%SCRIPTS_DIR%\bootstrap_buildtools.bat"
      # # TODO This should not be needed, update it when tested
      # # - name: Download PyTorch wheel artifact
      # #   uses: actions/download-artifact@v4
      # #   with:
      # #     github-token: ${{ secrets.GITHUB_TOKEN }}
      # #     run-id: ${{ inputs.pytorch_build_run_id }}
      # #     name: ${{ inputs.pytorch_build_artifact_name }}
      # #     path: ${{ env.DOWNLOADS_DIR }}
      # - name: Git checkout repo ${{ inputs.repository_name }}
      #   uses: actions/checkout@v4
      #   with:
      #     repository: ${{ inputs.repository_name }}
      #     ref: ${{ inputs.repository_branch }}
      #     path: ${{ env.SRC_DIR }}
      #     submodules: recursive
      - name: Call Build Script
        shell: bash
        run: |
          repository_name=$(basename "${{ inputs.repository_name }}")  # Extract audio or vision
          echo "$repository_name"
          
          echo "SCRIPTS_DIR: $SCRIPTS_DIR"
          ls -l "$SCRIPTS_DIR" || echo "SCRIPTS_DIR does not exist"

          echo "repository_name=$repository_name" >> "$GITHUB_ENV"
          if [ "$repository_name" = "audio" ]; then
              cmd //c "$SCRIPTS_DIR/build_audio.bat"
              if [ $? -eq 0 ]; then
                  echo "Done Building Torchaudio"
              else
                  echo "Error: Build Torchaudio failed"
                  exit 1
              fi
          elif [ "$repository_name" = "vision" ]; then
              cmd //c "$SCRIPTS_DIR/build_vision.bat"
              if [ $? -eq 0 ]; then
                  echo "Done Building Torchvision"
              else
                  echo "Error: Build Torchvision failed"
                  exit 1
              fi
          else
              echo "Invalid repository name: $repository_name"
              exit 1
          fi
          ls -l "$SRC_DIR"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.repository_name }}-wheel
          path: ${{ env.SRC_DIR }}\dist\*
          compression-level: 0
          retention-days: 3